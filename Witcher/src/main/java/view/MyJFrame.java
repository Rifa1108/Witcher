/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.Controller;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import controller.Characteristic;

/**
 *
 * @author rifa1
 */
public class MyJFrame extends javax.swing.JFrame implements TreeSelectionListener {

    private Controller controller;
    private String selectedCreatureSourceString;
    private int index;

    /**
     * Creates new form MyJFrame
     */
    public MyJFrame() {
        initComponents();
        setExtensionFilters(importFileChooser);
        controller = new Controller();
        setTree();

    }

    private void setExtensionFilters(javax.swing.JFileChooser fileChooser) {
        fileChooser.setFileFilter(new FileNameExtensionFilter("XML", "xml"));
        fileChooser.setFileFilter(new FileNameExtensionFilter("JSON", "json"));
        fileChooser.setFileFilter(new FileNameExtensionFilter("YAML", "yml"));
        fileChooser.setFileFilter(new FileNameExtensionFilter("XML & JSON & YAML", "xml", "json", "yml"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        importDialog = new javax.swing.JDialog();
        importPanel = new javax.swing.JPanel();
        importFileChooser = new javax.swing.JFileChooser();
        informationDialog = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        kindLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        menaceLabel = new javax.swing.JLabel();
        areasLabel = new javax.swing.JLabel();
        date_of_first_mention_Label = new javax.swing.JLabel();
        invulnerabilityLabel = new javax.swing.JLabel();
        height_in_metres_Label = new javax.swing.JLabel();
        immunitiesLabel = new javax.swing.JLabel();
        time_of_activity_Label = new javax.swing.JLabel();
        recipeLabel = new javax.swing.JLabel();
        kindTextField = new javax.swing.JTextField();
        menaceTextField = new javax.swing.JTextField();
        areasScrollPane = new javax.swing.JScrollPane();
        areasList = new javax.swing.JList<>();
        date_of_first_mention_TextField = new javax.swing.JTextField();
        invulnerabilityTextField = new javax.swing.JTextField();
        vulnerabilityLabel = new javax.swing.JLabel();
        vulnerabilityTextField = new javax.swing.JTextField();
        height_in_metres_TextField = new javax.swing.JTextField();
        weight_in_kg_Label = new javax.swing.JLabel();
        weight_in_kg_TextField = new javax.swing.JTextField();
        immunitiesScrollPane = new javax.swing.JScrollPane();
        immunitiesList = new javax.swing.JList<>();
        time_of_activity_TextField = new javax.swing.JTextField();
        typeLabel = new javax.swing.JLabel();
        typeTextField = new javax.swing.JTextField();
        ingredientsLabel = new javax.swing.JLabel();
        ingredientsScrollPane = new javax.swing.JScrollPane();
        ingredientsList = new javax.swing.JList<>();
        cooking_time_in_minutes_Label = new javax.swing.JLabel();
        cooking_time_in_minutes_TextField = new javax.swing.JTextField();
        efficiencyLabel = new javax.swing.JLabel();
        efficiencyTextField = new javax.swing.JTextField();
        descriptionScrollPane = new javax.swing.JScrollPane();
        descriptionTextField = new javax.swing.JTextField();
        quantityLabel = new javax.swing.JLabel();
        quantityScrollPane1 = new javax.swing.JScrollPane();
        quantityList = new javax.swing.JList<>();
        changeButton = new javax.swing.JButton();
        exportDialog = new javax.swing.JDialog();
        exportPanel = new javax.swing.JPanel();
        exportFileChooser = new javax.swing.JFileChooser();
        menu = new javax.swing.JPanel();
        importButton = new javax.swing.JButton();
        treeScrollPane = new javax.swing.JScrollPane();
        creaturesTree = new javax.swing.JTree();

        importFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importFileChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout importPanelLayout = new javax.swing.GroupLayout(importPanel);
        importPanel.setLayout(importPanelLayout);
        importPanelLayout.setHorizontalGroup(
            importPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(importFileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        importPanelLayout.setVerticalGroup(
            importPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(importFileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout importDialogLayout = new javax.swing.GroupLayout(importDialog.getContentPane());
        importDialog.getContentPane().setLayout(importDialogLayout);
        importDialogLayout.setHorizontalGroup(
            importDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(importPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        importDialogLayout.setVerticalGroup(
            importDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(importPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        kindLabel.setText("Вид");

        descriptionLabel.setText("Описание");

        menaceLabel.setText("Уровень опасности");

        areasLabel.setText("Места обитания");

        date_of_first_mention_Label.setText("Первое упоминание");

        invulnerabilityLabel.setText("Неуязвимость");

        height_in_metres_Label.setText("Рост в метрах");

        immunitiesLabel.setText("Иммунитеты");

        time_of_activity_Label.setText("Время активности");

        recipeLabel.setText("Рецепт");

        areasScrollPane.setViewportView(areasList);

        vulnerabilityLabel.setText("Уязвимость");

        weight_in_kg_Label.setText("Вес в кг");

        immunitiesScrollPane.setViewportView(immunitiesList);

        typeLabel.setText("Тип");

        ingredientsLabel.setText("Ингредиенты");

        ingredientsList.setEnabled(false);
        ingredientsScrollPane.setViewportView(ingredientsList);

        cooking_time_in_minutes_Label.setText("Время приготовления в минутах");

        efficiencyLabel.setText("Эффективность");

        descriptionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionTextFieldActionPerformed(evt);
            }
        });
        descriptionScrollPane.setViewportView(descriptionTextField);

        quantityLabel.setText("Количество");

        quantityList.setEnabled(false);
        quantityScrollPane1.setViewportView(quantityList);

        changeButton.setBackground(new java.awt.Color(0, 255, 204));
        changeButton.setForeground(new java.awt.Color(51, 51, 51));
        changeButton.setText("Изменить");
        changeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(kindLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(kindTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(descriptionLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(descriptionScrollPane))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(immunitiesLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(immunitiesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(weight_in_kg_Label)
                                        .addGap(18, 18, 18)
                                        .addComponent(weight_in_kg_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(time_of_activity_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(time_of_activity_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(98, 98, 98))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cooking_time_in_minutes_Label)
                                    .addComponent(ingredientsLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cooking_time_in_minutes_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(menaceLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(menaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(areasLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(vulnerabilityLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(vulnerabilityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(date_of_first_mention_Label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(date_of_first_mention_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(86, 86, 86)
                                        .addComponent(height_in_metres_Label)
                                        .addGap(31, 31, 31)
                                        .addComponent(height_in_metres_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(invulnerabilityLabel)
                                                .addGap(20, 20, 20)
                                                .addComponent(invulnerabilityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(areasScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ingredientsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(quantityScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34)
                                        .addComponent(changeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(quantityLabel)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(typeLabel)
                                .addGap(29, 29, 29)
                                .addComponent(typeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(125, 125, 125)
                                        .addComponent(recipeLabel))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(113, 113, 113)
                                        .addComponent(efficiencyLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(efficiencyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kindLabel)
                            .addComponent(kindTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(descriptionLabel)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(descriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(menaceLabel)
                        .addComponent(menaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(areasLabel))
                    .addComponent(areasScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(date_of_first_mention_Label)
                    .addComponent(invulnerabilityLabel)
                    .addComponent(invulnerabilityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date_of_first_mention_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vulnerabilityLabel)
                    .addComponent(vulnerabilityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(height_in_metres_Label)
                    .addComponent(height_in_metres_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weight_in_kg_Label)
                    .addComponent(weight_in_kg_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(time_of_activity_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(time_of_activity_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(immunitiesLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(immunitiesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(typeLabel)
                            .addComponent(typeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(efficiencyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(efficiencyLabel))
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(recipeLabel)
                        .addGap(64, 64, 64)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cooking_time_in_minutes_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cooking_time_in_minutes_Label))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(changeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(ingredientsLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ingredientsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 32, Short.MAX_VALUE)
                                .addComponent(quantityLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(quantityScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout informationDialogLayout = new javax.swing.GroupLayout(informationDialog.getContentPane());
        informationDialog.getContentPane().setLayout(informationDialogLayout);
        informationDialogLayout.setHorizontalGroup(
            informationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        informationDialogLayout.setVerticalGroup(
            informationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationDialogLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        exportFileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        exportFileChooser.setDialogTitle("Укажите формат файла для сохранения");

        javax.swing.GroupLayout exportPanelLayout = new javax.swing.GroupLayout(exportPanel);
        exportPanel.setLayout(exportPanelLayout);
        exportPanelLayout.setHorizontalGroup(
            exportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 598, Short.MAX_VALUE)
            .addGroup(exportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(exportPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(exportFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        exportPanelLayout.setVerticalGroup(
            exportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 347, Short.MAX_VALUE)
            .addGroup(exportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(exportPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(exportFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout exportDialogLayout = new javax.swing.GroupLayout(exportDialog.getContentPane());
        exportDialog.getContentPane().setLayout(exportDialogLayout);
        exportDialogLayout.setHorizontalGroup(
            exportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exportDialogLayout.createSequentialGroup()
                .addComponent(exportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        exportDialogLayout.setVerticalGroup(
            exportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exportDialogLayout.createSequentialGroup()
                .addComponent(exportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        importButton.setText("Импортировать чудовищ");
        importButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importButtonActionPerformed(evt);
            }
        });

        creaturesTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                creaturesTreeValueChanged(evt);
            }
        });
        treeScrollPane.setViewportView(creaturesTree);

        javax.swing.GroupLayout menuLayout = new javax.swing.GroupLayout(menu);
        menu.setLayout(menuLayout);
        menuLayout.setHorizontalGroup(
            menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(treeScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(importButton)
                .addContainerGap())
        );
        menuLayout.setVerticalGroup(
            menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuLayout.createSequentialGroup()
                .addGroup(menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(importButton)
                    .addComponent(treeScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importButtonActionPerformed
        // TODO add your handling code here:
        int returnValue = importFileChooser.showOpenDialog(menu);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            controller.setFile(importFileChooser.getSelectedFile());
            if (controller.formatIdentification()) {
                JOptionPane.showMessageDialog(rootPane, "Чудовища добавлены", "Сообщение", JOptionPane.INFORMATION_MESSAGE);
                setTree();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Не удалось загрузить чудовищ", "Ошибка", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_importButtonActionPerformed

    private void importFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importFileChooserActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_importFileChooserActionPerformed

    private void creaturesTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_creaturesTreeValueChanged
        // TODO add your handling code here:       
    }//GEN-LAST:event_creaturesTreeValueChanged

    private void descriptionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descriptionTextFieldActionPerformed

    private void changeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeButtonActionPerformed
        // TODO add your handling code here:
        HashMap<String, Object> info = new HashMap<String, Object>();
        info.put(Characteristic.KIND.getName(), kindTextField.getText());
        info.put(Characteristic.DESCRIPTION.getName(), descriptionTextField.getText());
        info.put(Characteristic.MENACE.getName(), menaceTextField.getText());
        info.put(Characteristic.DATE_OF_FIRST_MENTION.getName(), date_of_first_mention_TextField.getText());
        info.put(Characteristic.INVULNAREBILITY.getName(), invulnerabilityTextField.getText());
        info.put(Characteristic.VULNAREBILITY.getName(), vulnerabilityTextField.getText());
        info.put(Characteristic.HEIGHT.getName(), height_in_metres_TextField.getText());
        info.put(Characteristic.WEIGHT.getName(), weight_in_kg_TextField.getText());
        info.put(Characteristic.TIME_OF_ACTIVITY.getName(), time_of_activity_TextField.getText());
        HashMap<String, Object> updateRecipe = new HashMap<String, Object>();
        updateRecipe.put(Characteristic.TYPE.getName(), typeTextField.getText());
        updateRecipe.put(Characteristic.COOKING_TIME.getName(), cooking_time_in_minutes_TextField.getText());
        updateRecipe.put(Characteristic.EFFICIENCY.getName(), efficiencyTextField.getText());
        info.put(Characteristic.RECIPE.getName(), updateRecipe);
        if (controller.setInformation(info, selectedCreatureSourceString, index)) {
            JOptionPane.showMessageDialog(rootPane, "Изменения сохранены", "Сообщение", JOptionPane.INFORMATION_MESSAGE);
            informationDialog.dispose();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Вы вводите не корректные данные", "Ошибка", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_changeButtonActionPerformed
    @Override
    public void valueChanged(TreeSelectionEvent e) {
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) creaturesTree.getLastSelectedPathComponent();
        if (selectedNode != null && selectedNode.isLeaf() && !selectedNode.isRoot()) {
            DefaultMutableTreeNode selectedCreatureSource = (DefaultMutableTreeNode) selectedNode.getParent();
            selectedCreatureSourceString = selectedCreatureSource.toString();
            index = selectedCreatureSource.getIndex(selectedNode);
            setInformation(selectedCreatureSourceString, index);
        } else if (selectedNode != null && !selectedNode.isRoot() && !selectedNode.isLeaf()) {
            String source = selectedNode.toString();
            int returnValue = exportFileChooser.showSaveDialog(menu);
            if (returnValue == JFileChooser.APPROVE_OPTION) {
                String name = exportFileChooser.getSelectedFile().getAbsolutePath();
                if (controller.saveFile(source, name)) {
                    JOptionPane.showMessageDialog(rootPane, "Файл сохранён", "Сообщение", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Не удалось сохранить файл", "Ошибка", JOptionPane.ERROR_MESSAGE);
                }
                setTree();
            }

        }
    }

    private void setInformation(String selectedCreatureSourceString, int index) {
        HashMap<String, Object> info = controller.getInformation(selectedCreatureSourceString, index);
        kindTextField.setText(String.valueOf(info.get(Characteristic.KIND.getName())));
        descriptionTextField.setText(String.valueOf(info.get(Characteristic.DESCRIPTION.getName())));
        menaceTextField.setText(String.valueOf(info.get(Characteristic.MENACE.getName())));
        DefaultListModel areasModel = new DefaultListModel();
        for (Object area : (ArrayList<String>) info.get(Characteristic.AREAS.getName())) {
            areasModel.addElement(area);
        }
        areasList.setModel(areasModel);
        date_of_first_mention_TextField.setText(String.valueOf(info.get(Characteristic.DATE_OF_FIRST_MENTION.getName())));
        invulnerabilityTextField.setText(String.valueOf(info.get(Characteristic.INVULNAREBILITY.getName())));
        vulnerabilityTextField.setText(String.valueOf(info.get(Characteristic.VULNAREBILITY.getName())));
        height_in_metres_TextField.setText(String.valueOf(info.get(Characteristic.HEIGHT.getName())));
        weight_in_kg_TextField.setText(String.valueOf(info.get(Characteristic.WEIGHT.getName())));
        time_of_activity_TextField.setText(String.valueOf(info.get(Characteristic.TIME_OF_ACTIVITY.getName())));
        DefaultListModel immunitiesModel = new DefaultListModel();
        for (Object immunity : (ArrayList<String>) info.get(Characteristic.IMMUNITIES.getName())) {
            immunitiesModel.addElement(immunity);
        }
        immunitiesList.setModel(immunitiesModel);
        HashMap<String, Object> newRecipe = (HashMap<String, Object>) info.get(Characteristic.RECIPE.getName());
        typeTextField.setText(String.valueOf(newRecipe.get(Characteristic.TYPE.getName())));
        efficiencyTextField.setText(String.valueOf(newRecipe.get(Characteristic.EFFICIENCY.getName())));
        cooking_time_in_minutes_TextField.setText(String.valueOf(newRecipe.get(Characteristic.COOKING_TIME.getName())));
        DefaultListModel ingredientsModel = new DefaultListModel();
        DefaultListModel quantityModel = new DefaultListModel();
        HashMap<String, Integer> ingredients = (HashMap<String, Integer>) newRecipe.get(Characteristic.INGREDIENTS.getName());
        for (String ingredient : ingredients.keySet()) {
            ingredientsModel.addElement(ingredient);
            quantityModel.addElement(ingredients.get(ingredient));
        }
        ingredientsList.setModel(ingredientsModel);
        quantityList.setModel(quantityModel);
        informationDialog.setVisible(true);
        informationDialog.setSize(800, 600);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyJFrame().setVisible(true);

            }
        });
    }

    private void setTree() {
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Чудовища");
        creaturesTree = controller.createTree(root, informationDialog);
        creaturesTree.addTreeSelectionListener(this);
        treeScrollPane.setViewportView(creaturesTree);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel areasLabel;
    private javax.swing.JList<String> areasList;
    private javax.swing.JScrollPane areasScrollPane;
    private javax.swing.JButton changeButton;
    private javax.swing.JLabel cooking_time_in_minutes_Label;
    private javax.swing.JTextField cooking_time_in_minutes_TextField;
    private javax.swing.JTree creaturesTree;
    private javax.swing.JLabel date_of_first_mention_Label;
    private javax.swing.JTextField date_of_first_mention_TextField;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JScrollPane descriptionScrollPane;
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JLabel efficiencyLabel;
    private javax.swing.JTextField efficiencyTextField;
    private javax.swing.JDialog exportDialog;
    private javax.swing.JFileChooser exportFileChooser;
    private javax.swing.JPanel exportPanel;
    private javax.swing.JLabel height_in_metres_Label;
    private javax.swing.JTextField height_in_metres_TextField;
    private javax.swing.JLabel immunitiesLabel;
    private javax.swing.JList<String> immunitiesList;
    private javax.swing.JScrollPane immunitiesScrollPane;
    private javax.swing.JButton importButton;
    private javax.swing.JDialog importDialog;
    private javax.swing.JFileChooser importFileChooser;
    private javax.swing.JPanel importPanel;
    private javax.swing.JDialog informationDialog;
    private javax.swing.JLabel ingredientsLabel;
    private javax.swing.JList<String> ingredientsList;
    private javax.swing.JScrollPane ingredientsScrollPane;
    private javax.swing.JLabel invulnerabilityLabel;
    private javax.swing.JTextField invulnerabilityTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel kindLabel;
    private javax.swing.JTextField kindTextField;
    private javax.swing.JLabel menaceLabel;
    private javax.swing.JTextField menaceTextField;
    private javax.swing.JPanel menu;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JList<String> quantityList;
    private javax.swing.JScrollPane quantityScrollPane1;
    private javax.swing.JLabel recipeLabel;
    private javax.swing.JLabel time_of_activity_Label;
    private javax.swing.JTextField time_of_activity_TextField;
    private javax.swing.JScrollPane treeScrollPane;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JTextField typeTextField;
    private javax.swing.JLabel vulnerabilityLabel;
    private javax.swing.JTextField vulnerabilityTextField;
    private javax.swing.JLabel weight_in_kg_Label;
    private javax.swing.JTextField weight_in_kg_TextField;
    // End of variables declaration//GEN-END:variables

}
